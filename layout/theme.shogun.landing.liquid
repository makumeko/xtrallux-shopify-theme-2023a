{% comment %}
Auto-generated by Shogun.
This file can be re-written at any time.
{% endcomment %}

<!doctype html>
{%- capture dir -%}
	{%- case request.locale.iso_code -%}
	  {%- when 'ae' or 'ar' or 'arc' or 'bcc' or 'bqi' or 'ckb' or 'dv' or 'fa' or 'glk' or 'ha' or 'he' or 'kwh' or 'ks' or 'ku' or 'mzn' or 'nqo' or 'pnb' or 'ps' or 'sd' or 'ug' or 'ur' or 'yi' -%}
	    rtl
	  {%- else -%}
	    ltr
	{%- endcase -%}
{%- endcapture -%}
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ dir }}">
  
<head>
  
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5, viewport-fit=cover">
    <meta name="theme-color" content="{{ settings.color_body_bg }}">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <!-- Font Awesome -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
      integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    >
    <!-- Wistia Script -->
    <script src="https://fast.wistia.com/assets/external/E-v1.js" async></script>
    <!-- Google Tag Manager -->
    <script>
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-NK9ZRQ2');
    </script>
    <!-- End Google Tag Manager -->
    {% render 'head-preload' %}

    {% if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif %}

    <title>
      {{ page_title }}
      {% if current_tags -%}
        {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
      {%- endif %}
      {% if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif %}
      {% unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless %}
    </title>

    {% if page_description %}
      <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    {%- unless settings.heading_font.system? and settings.body_font.system? -%}
      <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    {% render 'social-meta-tags' %}

    {{ 'app.css' | asset_url | stylesheet_tag }}
    {{ 'product-grid.css' | asset_url | stylesheet_tag }}

    {% render 'head-variables' %}

    <script>
      
		window.theme = window.theme || {};
		theme = {
			settings: {
				money_with_currency_format: {{- shop.money_format | json -}},
				cart_drawer: {{- settings.cart_drawer -}}
			},
			routes: {
				root_url: '{{ routes.root_url }}',
				cart_url: '{{ routes.cart_url }}',
				cart_add_url: '{{ routes.cart_add_url }}',
				search_url: '{{ routes.search_url }}',
				cart_change_url: '{{ routes.cart_change_url }}',
				cart_update_url: '{{ routes.cart_update_url }}',
				predictive_search_url: '{{ routes.predictive_search_url }}',
			},
			variantStrings: {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
      },
			strings: {
				requiresTerms: `{{ 'sections.cart.terms_confirm' | t }}`,
			}
		};

    </script>
    {{ content_for_header }}
    <!-- Header hook for plugins -->

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    </script>

    {% render 'shogun-head' %}

    {% render 'limoniapps-discountninja-header' %}
    {%- if product -%}{%- assign discountninjaproduct = product -%}{%- endif -%}
    {%- if collection -%}{%- assign discountninjacollection = collection -%}{%- endif -%}
  
</head>

  
<body class="animations-{{ settings.animations }} button-uppercase-{{ settings.button_uppercase }} navigation-uppercase-{{ settings.navigation_uppercase }} product-card-spacing-{{ settings.product_card_spacing }} article-card-spacing-{{ settings.article_card_spacing }} {% if customer %} customer-logged-in{% endif %} template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }} template-{{ template | replace: '.', '-' | handle }}">
  {{ 'free-shipping.css' | asset_url | stylesheet_tag }}
  
  {{ content_for_layout }}
  {{ 'vendor.min.js' | asset_url | script_tag }}
{{ 'animations.min.js' | asset_url | script_tag }}
{{ 'product.js' | asset_url | script_tag }}
{{ 'slideshow.js' | asset_url | script_tag }}
{{ 'app.js' | asset_url | script_tag }}
{{ 'free-shipping.js' | asset_url | script_tag }}
{{ 'theme-editor.js' | asset_url | script_tag }}
  <script>
        gsap.defaults({
        	ease: Power4.easeOut
        });
        gsap.config({
           nullTargetWarn: false
         });
        gsap.registerPlugin(ScrollTrigger, DrawSVGPlugin);
      </script>
<script type="module" src="{{ 'scroll-shadow.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
<script
      id="gorgias-chat-widget-install-v3"
      src="https://config.gorgias.chat/bundle-loader/01H4KBY4SDV5TC2WXJY37BFGTZ?source=shopify1click"
    ></script>
<script id="gorgias-chat-shopify-install">
      !function(_){_.SHOPIFY_PERMANENT_DOMAIN="{{shop.permanent_domain}}",_.SHOPIFY_CUSTOMER_ID="{{customer.id}}",_.SHOPIFY_CUSTOMER_EMAIL="{{customer.email}}"}(window||{});
    </script>
<script>
      function checkForClassChange(mutationsList, observer) {
        for (const mutation of mutationsList) {
          if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
            const targetElement = mutation.target;
            if (targetElement.classList.contains('open-cc')) {
              const chatWidget = document.getElementById('gorgias-chat-container');
              chatWidget.style.display = 'none';
              console.log("Yo!");
            }
            if (!targetElement.classList.contains('open-cc')){ 
              const chatWidget = document.getElementById('gorgias-chat-container');
              chatWidget.style.display = 'block';
              console.log('Yo!');
            }
          }
        }
      }
      const targetElement = document.body;
      const observer = new MutationObserver(checkForClassChange);
      const config = { attributes: true, attributeFilter: ['class'] };
      observer.observe(targetElement, config);
    </script>
  <style type="text/css">
    body, html {
      width: 100% !important;
      background: white !important;
    }
  </style>
  
</body>

</html>

